<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//MyBatis//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.sist.user.mapper.ReviewMapper">

<resultMap type="kr.co.sist.user.dto.ReviewDTO" id="reviewResult">
<id column="review_seq" property="reviewSeq"/>
     <result column="corp_no" property="corpNo"/>
        <result column="email" property="email"/>
        <result column="rating" property="rating"/>
        <result column="summary" property="summary"/>
        <result column="pros" property="pros"/>
        <result column="cons" property="cons"/>
        <result column="created_at" property="createdAt"/>
        <result column="avg_rating" property="avgRating"/>
        <result column="total_reviews" property="totalReviews"/>
        <result column="company_name" property="companyName"/>
</resultMap>

 <!-- 해당 기업의 모든 리뷰 조회 (최신순) -->
<select id="selectReviewsByCorpNo" parameterType="Long" resultMap="reviewResult">
 select
 		review_seq,
 		corp_no,
 		rating,
 		summary,
 		pros,
 		cons,
 		created_at
 FROM REVIEW
 WHERE corp_no=#{corpNo}
 ORDER BY created_at DESC
</select>

 <!-- 리뷰 통계 조회 (평균 평점, 총 리뷰 수) -->
<select id="selectReviewStats" parameterType="Long" resultMap="reviewResult">
    SELECT
        COUNT(*) as total_reviews,
        COALESCE(ROUND(AVG(rating), 1), 0.0) as avg_rating
    FROM review
    WHERE corp_no = #{corpNo}
</select>

<!-- 기업명 조회 -->
<select id="selectCompanyName" parameterType="Long" resultType="String">
 SELECT CORP_NM FROM COMPANY WHERE CORP_NO = #{corpNo}

</select>

<!-- 리뷰 작성 권한 확인 (해당 기업에 최종합격한 이력이 있는지) -->
<select id="checkReviewEligibility" resultType="int" >
select count(*)
from job_application ja
join job_posting jp on ja.job_posting_seq = jp.job_posting_seq
join resume r on ja.resume_seq = r.resume_seq
where r.email=#{email}
and jp.corp_no=#{corpNo}
and ja.pass_stage=2
</select>

    <!-- 이미 리뷰를 작성했는지 확인 -->

<select id="checkExistingReview" resultType="int">
        SELECT COUNT(*) 
        FROM REVIEW 
        WHERE email = #{email} 
        AND corp_no = #{corpNo}
</select>

    <!-- 리뷰 저장 -->
    <insert id="insertReview" parameterType="kr.co.sist.user.dto.ReviewDTO">
        INSERT INTO REVIEW (
            corp_no,
            email,
            rating,
            summary,
            pros,
            cons,
            created_at
        ) VALUES (
            #{corpNo},
            #{email},
            #{rating},
            #{summary},
            #{pros},
            #{cons},
            #{createdAt}
        )
    </insert>

<!-- 해당 기업의 리뷰 총 개수 조회 -->
<select id="countReviewsByCorpNo" parameterType="Long" resultType="int">
    SELECT COUNT(*) FROM REVIEW WHERE corp_no = #{corpNo}
</select>
<!-- 페이징된 리뷰 목록 조회 (Oracle 12c+ 버전) -->
<select id="selectReviewsPage" parameterType="kr.co.sist.user.dto.ReviewSearchDTO" resultMap="reviewResult">
    SELECT 
        review_seq,
        corp_no,
        email,
        rating,
        summary,
        pros,
        cons,
        created_at
    FROM REVIEW
    WHERE corp_no = #{corpNo}
    ORDER BY created_at DESC
    OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
</select>


</mapper>